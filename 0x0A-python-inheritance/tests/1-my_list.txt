The ``1-my_list`` module
=======================

Using ``MyList``
-------------

Importing Function from module:
	>>> my_list = __import__("1-my_list").MyList

Checking for module docstring:
	>>> m = __import__("1-my_list").__doc__
	>>> len(m) > 1
	True
Checking for class docstring:
	>>> c = __import__("1-my_list").MyList.__doc__
	>>> len(c) > 1
	True
Checking for method docstring:
	>>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len (mod) > 1
	True

Checking if MyList inherits from list:
	>>> issubclass(MyList, list)
	True

Checking for an empty list:
	>>> l = MyList()
	l.print_sorted
	[]

Checking that appending works:
	>>> l.append(5)
	>>> l.append(6)
	>>> l.append(7)
	>>> l.append(8)
	>>> print(l)
	[5, 6, 7, 8]

CHecking that the list is correct order
	>>> l.print_sorted()
	[5, 6, 7, 8]

Checking for list in reverse order:
	>>> l = MyList()
	>>> l.append(8)
        >>> l.append(7)
        >>> l.append(6)
        >>> l.append(5)
        >>> print(l)
	[8, 7, 6, 5]
	>>> l.print_sorted()
	[5, 6, 7, 8]
	>>>print(l)
	[8, 7, 6, 5]

Checking for one negative number:
	>>> l.append(-4)
	>>> l.append(4)
	>>>print(l)
	[8, 7, 6, 5, -4, 4]
	>>>l.print_sorted()
	[-4, 4, 5, 6, 7, 8]
	>>>print(l)
	[8, 7, 6, 5, -4, 4]

checking for all negative numbers:
	>>> l = MyList()
	>>> l.append(-7)
        >>> l.append(-8)
        >>> l.append(-5)
        >>> l.append(-6)
	>>> print(l)
	[-7, -8, -5, -6]
	>>> l.print_sorted()
	[-8, -7, -6, -5]
	>>> print(l)
	[-7, -8, -5, -6]
Checking for too many arguments:
	  >>> l.print_sorted(1)
	  Traceback (most recent call last):
	  ...
	  TypeError: print_sorted() takes 1 positional argument but 2 were given
	
